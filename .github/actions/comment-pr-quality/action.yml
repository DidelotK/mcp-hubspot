name: 'Comment PR with Quality Report'
description: 'Add or update PR comments with code quality reports'
author: 'HubSpot MCP Server Team'

inputs:
  report-path:
    description: 'Path to the quality report file (Markdown format)'
    required: true
    default: 'lint_report.md'
  
  github-token:
    description: 'GitHub token for API access'
    required: true
    default: ${{ github.token }}

runs:
  using: 'composite'
  steps:
    - name: Check if report exists
      id: check-report
      shell: bash
      run: |
        if [ -f "${{ inputs.report-path }}" ]; then
          echo "exists=true" >> $GITHUB_OUTPUT
          echo "report-content<<EOF" >> $GITHUB_OUTPUT
          cat "${{ inputs.report-path }}" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
        else
          echo "exists=false" >> $GITHUB_OUTPUT
          echo 'report-content=## ❌ Error during code quality check\n\nUnable to generate quality report.' >> $GITHUB_OUTPUT
        fi

    - name: Find existing quality comment
      if: steps.check-report.outputs.exists == 'true'
      uses: peter-evans/find-comment@v3
      id: find-comment
      with:
        issue-number: ${{ github.event.pull_request.number }}
        comment-author: 'github-actions[bot]'
        body-includes: 'Code Quality Report'

    - name: Create or update PR comment
      if: steps.check-report.outputs.exists == 'true'
      uses: peter-evans/create-or-update-comment@v4
      with:
        comment-id: ${{ steps.find-comment.outputs.comment-id }}
        issue-number: ${{ github.event.pull_request.number }}
        body: |
          ${{ steps.check-report.outputs.report-content }}
          
          ---
          *This comment was automatically generated by the quality check workflow.*
        edit-mode: replace
        token: ${{ inputs.github-token }}

    - name: Report action status
      shell: bash
      run: |
        if [ "${{ steps.check-report.outputs.exists }}" = "true" ]; then
          echo "✅ Quality report posted/updated on PR"
        else
          echo "❌ Unable to read quality report"
          exit 1
        fi